; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32

[common]
build_unflags =
    -std=gnu++11
build_flags =
    -std=c++17
    -std=gnu++17
    -Isrc/common
build_src_filter =
    +<common/**>
test_framework = googletest
test_filter =
    common/*
lib_deps = 
	https://github.com/HGinnerup/uICAL ; sourcesimian/uICAL@^0.0.1 ; Use fork until https://github.com/sourcesimian/uICAL/pull/18 is merged
	fastled/FastLED@^3.10.1
    AsyncTCP ; For telnet

[env:esp32]
extends = common
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
test_filter =
    ${common.test_filter}
    esp32/*
build_src_filter =
    ${common.build_src_filter}
    +<esp32/**>
build_flags =
     ${common.build_flags}
	 -DPIO_ENV_ESP32

[env:esp32_ota]
extends = env:esp32
extra_scripts =
    pre:platformioscripts/get_ota_credentials_from_config.h.py
    pre:platformioscripts/get_telnet_details_from_config.h.py
upload_protocol = espota
; IP address of the ESP32
; upload_port = 192.168.1.14 ; Upload port is populated from config.h
upload_flags = --timeout=600 ; auth and port populated from config.h
monitor_port = socket://aquariumical:23 ; Making this automatically update from config.h is on todo.



; For running tests on native host machine
[env:desktop]
extends = common
platform = native
build_src_filter =
    ${common.build_src_filter}
    +<desktop/**>
test_filter =
    ${common.test_filter}
    desktop/*
build_flags =
    ${common.build_flags}
    -DPIO_ENV_DESKTOP
build_type = debug
